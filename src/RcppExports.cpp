// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// rmultinomRcpp
IntegerVector rmultinomRcpp(NumericVector probs);
RcppExport SEXP _zinLDA_rmultinomRcpp(SEXP probsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type probs(probsSEXP);
    rcpp_result_gen = Rcpp::wrap(rmultinomRcpp(probs));
    return rcpp_result_gen;
END_RCPP
}
// findStringLoc
int findStringLoc(StringVector inputVector, String id);
RcppExport SEXP _zinLDA_findStringLoc(SEXP inputVectorSEXP, SEXP idSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type inputVector(inputVectorSEXP);
    Rcpp::traits::input_parameter< String >::type id(idSEXP);
    rcpp_result_gen = Rcpp::wrap(findStringLoc(inputVector, id));
    return rcpp_result_gen;
END_RCPP
}
// bSumRcpp
NumericVector bSumRcpp(double b_, NumericMatrix nw_, IntegerVector w_, int V_, int k_);
RcppExport SEXP _zinLDA_bSumRcpp(SEXP b_SEXP, SEXP nw_SEXP, SEXP w_SEXP, SEXP V_SEXP, SEXP k_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type b_(b_SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type nw_(nw_SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type w_(w_SEXP);
    Rcpp::traits::input_parameter< int >::type V_(V_SEXP);
    Rcpp::traits::input_parameter< int >::type k_(k_SEXP);
    rcpp_result_gen = Rcpp::wrap(bSumRcpp(b_, nw_, w_, V_, k_));
    return rcpp_result_gen;
END_RCPP
}
// sampleZProbRcpp
NumericVector sampleZProbRcpp(int d, int w, IntegerVector kVect, arma::mat delta, NumericMatrix nw, IntegerMatrix nd, IntegerVector ndsum, int K, double a, double b, double alpha, int V);
RcppExport SEXP _zinLDA_sampleZProbRcpp(SEXP dSEXP, SEXP wSEXP, SEXP kVectSEXP, SEXP deltaSEXP, SEXP nwSEXP, SEXP ndSEXP, SEXP ndsumSEXP, SEXP KSEXP, SEXP aSEXP, SEXP bSEXP, SEXP alphaSEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type w(wSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type kVect(kVectSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type nw(nwSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type nd(ndSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ndsum(ndsumSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(sampleZProbRcpp(d, w, kVect, delta, nw, nd, ndsum, K, a, b, alpha, V));
    return rcpp_result_gen;
END_RCPP
}
// gibbSampleZRcpp
List gibbSampleZRcpp(int D, List z, NumericMatrix nw, IntegerMatrix nd, IntegerVector ndsum, IntegerVector kVect, arma::mat delta, int K, double a, double b, double alpha, int V);
RcppExport SEXP _zinLDA_gibbSampleZRcpp(SEXP DSEXP, SEXP zSEXP, SEXP nwSEXP, SEXP ndSEXP, SEXP ndsumSEXP, SEXP kVectSEXP, SEXP deltaSEXP, SEXP KSEXP, SEXP aSEXP, SEXP bSEXP, SEXP alphaSEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type D(DSEXP);
    Rcpp::traits::input_parameter< List >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type nw(nwSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type nd(ndSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ndsum(ndsumSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type kVect(kVectSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(gibbSampleZRcpp(D, z, nw, nd, ndsum, kVect, delta, K, a, b, alpha, V));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_zinLDA_rmultinomRcpp", (DL_FUNC) &_zinLDA_rmultinomRcpp, 1},
    {"_zinLDA_findStringLoc", (DL_FUNC) &_zinLDA_findStringLoc, 2},
    {"_zinLDA_bSumRcpp", (DL_FUNC) &_zinLDA_bSumRcpp, 5},
    {"_zinLDA_sampleZProbRcpp", (DL_FUNC) &_zinLDA_sampleZProbRcpp, 12},
    {"_zinLDA_gibbSampleZRcpp", (DL_FUNC) &_zinLDA_gibbSampleZRcpp, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_zinLDA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
